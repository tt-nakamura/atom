from scipy.integrate import trapz
from HartreeFock import HartreeFock, E_total

config = {# (Z,n,l,w)
 'H': (1, [1], [0], [1]),
 'He':(2, [1], [0], [2]),
 'Li':(3, [1,2], [0,0], [2,1]),
 'Be':(4, [1,2], [0,0], [2,2]),
# 'B': (5, [1,2,2], [0,0,1], [2,2,1]),
# 'C': (6, [1,2,2], [0,0,1], [2,2,2]),
# 'N': (7, [1,2,2], [0,0,1], [2,2,3]),
# 'O': (8, [1,2,2], [0,0,1], [2,2,4]),
# 'F': (9, [1,2,2], [0,0,1], [2,2,5]),
# 'Ne':(10, [1,2,2], [0,0,1], [2,2,6]),
# 'Na':(11, [1,2,2,3], [0,0,1,0], [2,2,6,1]),
# 'Mg':(12, [1,2,2,3], [0,0,1,0], [2,2,6,2]),
# 'Al':(13, [1,2,2,3,3], [0,0,1,0,1], [2,2,6,2,1]),
# 'Si':(14, [1,2,2,3,3], [0,0,1,0,1], [2,2,6,2,2]),
# 'P': (15, [1,2,2,3,3], [0,0,1,0,1], [2,2,6,2,3]),
# 'S': (16, [1,2,2,3,3], [0,0,1,0,1], [2,2,6,2,4]),
# 'Cl':(17, [1,2,2,3,3], [0,0,1,0,1], [2,2,6,2,5]),
# 'Ar':(18, [1,2,2,3,3], [0,0,1,0,1], [2,2,6,2,6]),
# 'K': (19, [1,2,2,3,3,4], [0,0,1,0,1,0], [2,2,6,2,6,1]),
# 'Ca':(20, [1,2,2,3,3,4], [0,0,1,0,1,0], [2,2,6,2,6,2]),
# 'Sc':(21, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,1,2]),
# 'Ti':(22, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,2,2]),
# 'V': (23, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,3,2]),
# 'Cr':(24, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,5,1]),#oscillate
# 'Mn':(25, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,5,2]),
# 'Fe':(26, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,6,2]),
# 'Co':(27, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,7,2]),
# 'Ni':(28, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,8,2]),#crash
# 'Cu':(29, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,10,1]),#oscillate
# 'Zn':(30, [1,2,2,3,3,3,4], [0,0,1,0,1,2,0], [2,2,6,2,6,10,2]),#crash
# 'Ga':(31, [1,2,2,3,3,3,4,4], [0,0,1,0,1,2,0,1], [2,2,6,2,6,10,2,1]),
# 'Ge':(32, [1,2,2,3,3,3,4,4], [0,0,1,0,1,2,0,1], [2,2,6,2,6,10,2,2]),
# 'As':(33, [1,2,2,3,3,3,4,4], [0,0,1,0,1,2,0,1], [2,2,6,2,6,10,2,3]),
# 'Se':(34, [1,2,2,3,3,3,4,4], [0,0,1,0,1,2,0,1], [2,2,6,2,6,10,2,4]),
# 'Br':(35, [1,2,2,3,3,3,4,4], [0,0,1,0,1,2,0,1], [2,2,6,2,6,10,2,5]),
# 'Kr':(36, [1,2,2,3,3,3,4,4], [0,0,1,0,1,2,0,1], [2,2,6,2,6,10,2,6]),
# 'Rb':(37, [1,2,2,3,3,3,4,4,5], [0,0,1,0,1,2,0,1,0], [2,2,6,2,6,10,2,6,1]),
# 'Sr':(38, [1,2,2,3,3,3,4,4,5], [0,0,1,0,1,2,0,1,0], [2,2,6,2,6,10,2,6,2]),
# 'Y':(39, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,1,2]),
# 'Zr':(40, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,2,2]),
# 'Nb':(41, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,4,1]),
# 'Mo':(42, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,5,1]),
# 'Tc':(43, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,5,2]),
# 'Ru':(44, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,7,1]),
# 'Rh':(45, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,8,1]),
# 'Pd':(46, [1,2,2,3,3,3,4,4,4], [0,0,1,0,1,2,0,1,2], [2,2,6,2,6,10,2,6,10]),#crash
# 'Ag':(47, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,10,1]),#crash
# 'Cd':(48, [1,2,2,3,3,3,4,4,4,5], [0,0,1,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,10,2]),
# 'In':(49, [1,2,2,3,3,3,4,4,4,5,5], [0,0,1,0,1,2,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,2,1]),
# 'Sn':(50, [1,2,2,3,3,3,4,4,4,5,5], [0,0,1,0,1,2,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,2,2]),
# 'Sb':(51, [1,2,2,3,3,3,4,4,4,5,5], [0,0,1,0,1,2,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,2,3]),
# 'Te':(52, [1,2,2,3,3,3,4,4,4,5,5], [0,0,1,0,1,2,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,2,4]),
# 'I': (53, [1,2,2,3,3,3,4,4,4,5,5], [0,0,1,0,1,2,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,2,5]),
# 'Xe':(54, [1,2,2,3,3,3,4,4,4,5,5], [0,0,1,0,1,2,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,2,6]),#crash
# 'Cs':(55, [1,2,2,3,3,3,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,0,1,0], [2,2,6,2,6,10,2,6,10,2,6,1]),
# 'Ba':(56, [1,2,2,3,3,3,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,0,1,0], [2,2,6,2,6,10,2,6,10,2,6,2]),
# 'La':(57, [1,2,2,3,3,3,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,10,2,6,1,2]),
# 'Ce':(58, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,1,2,6,1,2]),#crash
# 'Pr':(59, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,3,2,6,2]),
# 'Nd':(60, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,4,2,6,2]),
# 'Pm':(61, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,5,2,6,2]),#crash
# 'Sm':(62, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,6,2,6,2]),
# 'Eu':(63, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,7,2,6,2]),
# 'Gd':(64, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,7,2,6,1,2]),#crash
# 'Tb':(65, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,9,2,6,2]),#oscillate
# 'Dy':(66, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,10,2,6,2]),#freeze
# 'Ho':(67, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,11,2,6,2]),#freeze
# 'Er':(68, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,12,2,6,2]),#oscillate
# 'Tm':(69, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,13,2,6,2]),#oscillate
# 'Yb':(70, [1,2,2,3,3,3,4,4,4,4,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,0], [2,2,6,2,6,10,2,6,10,14,2,6,2]),#oscillate
# 'Lu':(71, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,1,2]),#crash
# 'Hf':(72, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,2,2]),#oscillate
# 'Ta':(73, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,3,2]),#crash
# 'W': (74, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,4,2]),
# 'Re':(75, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,5,2]),
# 'Os':(76, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,6,2]),
# 'Ir':(77, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,7,2]),
# 'Pt':(78, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,9,1]),
# 'Au':(79, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,1]),#oscillate
# 'Hg':(80, [1,2,2,3,3,3,4,4,4,4,5,5,5,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,2]),
# 'Tl':(81, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,1]),
# 'Pb':(82, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,2]),
# 'Bi':(83, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,3]),
# 'Po':(84, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,4]),
# 'At':(85, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,5]),
# 'Rn':(86, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,6]),#crash
# 'Fr':(87, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6,7], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,6,1]),
# 'Ra':(88, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6,7], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,6,2]),#crash
# 'Ac':(89, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6,6,7], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,6,1,2]),
# 'Th':(90, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6,6,7], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,6,2,2]),
# 'Pa':(91, [1,2,2,3,3,3,4,4,4,4,5,5,5,6,6,6,7], [0,0,1,0,1,2,0,1,2,3,0,1,2,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,2,6,3,2]),#freeze
# 'U': (92, [1,2,2,3,3,3,4,4,4,4,5,5,5,5,6,6,6,7], [0,0,1,0,1,2,0,1,2,3,0,1,2,3,0,1,2,0], [2,2,6,2,6,10,2,6,10,14,2,6,10,1,2,6,1,2]),
}

spdf = ['s', 'p', 'd', 'f']

for name,(Z,n,l,w) in config.items():
    H = HartreeFock(Z,n,l,w, randomize=True)
    print('{} & ${:6g}$'.format(name, E_total(H)))
    for a in H:
        print('& {:d}{}$^{:d}$'.format(a.n, spdf[a.l], a.w),
              '& ${:6g}$'.format(a.E),
              '& ${:6g}$'.format(trapz(a.r * a.P**2, a.r)))
